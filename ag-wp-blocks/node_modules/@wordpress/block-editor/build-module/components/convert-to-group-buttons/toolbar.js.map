{"version":3,"sources":["@wordpress/block-editor/src/components/convert-to-group-buttons/toolbar.js"],"names":["useDispatch","useSelect","switchToBlockType","ToolbarButton","ToolbarGroup","group","row","stack","_x","useConvertToGroupButtonProps","store","blockEditorStore","layouts","undefined","type","flexWrap","orientation","BlockGroupToolbar","blocksSelection","clientIds","groupingBlockName","isGroupable","replaceBlocks","canRemove","select","canRemoveBlocks","onConvertToGroup","layout","newBlocks","length","attributes","onConvertToRow","onConvertToStack"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,iBAAvC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,uBAA5C;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,QAAkC,kBAAlC;AACA,SAASC,EAAT,QAAmB,iBAAnB;AAEA;AACA;AACA;;AACA,SAASC,4BAAT,QAA6C,6BAA7C;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;AAEA,MAAMC,OAAO,GAAG;AACfP,EAAAA,KAAK,EAAEQ,SADQ;AAEfP,EAAAA,GAAG,EAAE;AAAEQ,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAFU;AAGfR,EAAAA,KAAK,EAAE;AAAEO,IAAAA,IAAI,EAAE,MAAR;AAAgBE,IAAAA,WAAW,EAAE;AAA7B;AAHQ,CAAhB;;AAMA,SAASC,iBAAT,GAA6B;AAC5B,QAAM;AACLC,IAAAA,eADK;AAELC,IAAAA,SAFK;AAGLC,IAAAA,iBAHK;AAILC,IAAAA;AAJK,MAKFZ,4BAA4B,EALhC;AAMA,QAAM;AAAEa,IAAAA;AAAF,MAAoBtB,WAAW,CAAEW,gBAAF,CAArC;AAEA,QAAM;AAAEY,IAAAA;AAAF,MAAgBtB,SAAS,CAC5BuB,MAAF,IAAc;AACb,UAAM;AAAEC,MAAAA;AAAF,QAAsBD,MAAM,CAAEb,gBAAF,CAAlC;AACA,WAAO;AACNY,MAAAA,SAAS,EAAEE,eAAe,CAAEN,SAAF;AADpB,KAAP;AAGA,GAN6B,EAO9B,CAAEA,SAAF,CAP8B,CAA/B;;AAUA,QAAMO,gBAAgB,GAAG,YAAwB;AAAA,QAAtBC,MAAsB,uEAAb,OAAa;AAChD,UAAMC,SAAS,GAAG1B,iBAAiB,CAClCgB,eADkC,EAElCE,iBAFkC,CAAnC;;AAKA,QAAKQ,SAAS,IAAIA,SAAS,CAACC,MAAV,GAAmB,CAArC,EAAyC;AACxC;AACA;AACAD,MAAAA,SAAS,CAAE,CAAF,CAAT,CAAeE,UAAf,CAA0BH,MAA1B,GAAmCf,OAAO,CAAEe,MAAF,CAA1C;AACAL,MAAAA,aAAa,CAAEH,SAAF,EAAaS,SAAb,CAAb;AACA;AACD,GAZD;;AAcA,QAAMG,cAAc,GAAG,MAAML,gBAAgB,CAAE,KAAF,CAA7C;;AACA,QAAMM,gBAAgB,GAAG,MAAMN,gBAAgB,CAAE,OAAF,CAA/C,CAlC4B,CAoC5B;AACA;AACA;AACA;;;AACA,MAAK,CAAEL,WAAF,IAAiB,CAAEE,SAAxB,EAAoC;AACnC,WAAO,IAAP;AACA;;AAED,SACC,cAAC,YAAD,QACC,cAAC,aAAD;AACC,IAAA,IAAI,EAAGlB,KADR;AAEC,IAAA,KAAK,EAAGG,EAAE,CAAE,OAAF,EAAW,MAAX,CAFX;AAGC,IAAA,OAAO,EAAGkB;AAHX,IADD,EAMC,cAAC,aAAD;AACC,IAAA,IAAI,EAAGpB,GADR;AAEC,IAAA,KAAK,EAAGE,EAAE,CAAE,KAAF,EAAS,wBAAT,CAFX;AAGC,IAAA,OAAO,EAAGuB;AAHX,IAND,EAWC,cAAC,aAAD;AACC,IAAA,IAAI,EAAGxB,KADR;AAEC,IAAA,KAAK,EAAGC,EAAE,CAAE,OAAF,EAAW,MAAX,CAFX;AAGC,IAAA,OAAO,EAAGwB;AAHX,IAXD,CADD;AAmBA;;AAED,eAAef,iBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { switchToBlockType } from '@wordpress/blocks';\nimport { ToolbarButton, ToolbarGroup } from '@wordpress/components';\nimport { group, row, stack } from '@wordpress/icons';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { useConvertToGroupButtonProps } from '../convert-to-group-buttons';\nimport { store as blockEditorStore } from '../../store';\n\nconst layouts = {\n\tgroup: undefined,\n\trow: { type: 'flex', flexWrap: 'nowrap' },\n\tstack: { type: 'flex', orientation: 'vertical' },\n};\n\nfunction BlockGroupToolbar() {\n\tconst {\n\t\tblocksSelection,\n\t\tclientIds,\n\t\tgroupingBlockName,\n\t\tisGroupable,\n\t} = useConvertToGroupButtonProps();\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\n\tconst { canRemove } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canRemoveBlocks } = select( blockEditorStore );\n\t\t\treturn {\n\t\t\t\tcanRemove: canRemoveBlocks( clientIds ),\n\t\t\t};\n\t\t},\n\t\t[ clientIds ]\n\t);\n\n\tconst onConvertToGroup = ( layout = 'group' ) => {\n\t\tconst newBlocks = switchToBlockType(\n\t\t\tblocksSelection,\n\t\t\tgroupingBlockName\n\t\t);\n\n\t\tif ( newBlocks && newBlocks.length > 0 ) {\n\t\t\t// Because the block is not in the store yet we can't use\n\t\t\t// updateBlockAttributes so need to manually update attributes.\n\t\t\tnewBlocks[ 0 ].attributes.layout = layouts[ layout ];\n\t\t\treplaceBlocks( clientIds, newBlocks );\n\t\t}\n\t};\n\n\tconst onConvertToRow = () => onConvertToGroup( 'row' );\n\tconst onConvertToStack = () => onConvertToGroup( 'stack' );\n\n\t// Don't render the button if the current selection cannot be grouped.\n\t// A good example is selecting multiple button blocks within a Buttons block:\n\t// The group block is not a valid child of Buttons, so we should not show the button.\n\t// Any blocks that are locked against removal also cannot be grouped.\n\tif ( ! isGroupable || ! canRemove ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<ToolbarGroup>\n\t\t\t<ToolbarButton\n\t\t\t\ticon={ group }\n\t\t\t\tlabel={ _x( 'Group', 'verb' ) }\n\t\t\t\tonClick={ onConvertToGroup }\n\t\t\t/>\n\t\t\t<ToolbarButton\n\t\t\t\ticon={ row }\n\t\t\t\tlabel={ _x( 'Row', 'single horizontal line' ) }\n\t\t\t\tonClick={ onConvertToRow }\n\t\t\t/>\n\t\t\t<ToolbarButton\n\t\t\t\ticon={ stack }\n\t\t\t\tlabel={ _x( 'Stack', 'verb' ) }\n\t\t\t\tonClick={ onConvertToStack }\n\t\t\t/>\n\t\t</ToolbarGroup>\n\t);\n}\n\nexport default BlockGroupToolbar;\n"]}