import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { __experimentalItemGroup as ItemGroup, __experimentalItem as Item, __experimentalHStack as HStack, FlexItem, ColorIndicator, Dropdown } from '@wordpress/components';
/**
 * Internal dependencies
 */

import ColorGradientControl from './control';
export default function ColorGradientSettingsDropdown(_ref) {
  let {
    colors,
    gradients,
    disableCustomColors,
    disableCustomGradients,
    __experimentalHasMultipleOrigins,
    __experimentalIsRenderedInSidebar,
    enableAlpha,
    settings
  } = _ref;
  let dropdownPosition;

  if (__experimentalIsRenderedInSidebar) {
    dropdownPosition = 'bottom left';
  }

  return createElement(ItemGroup, {
    isBordered: true,
    isSeparated: true,
    className: "block-editor-panel-color-gradient-settings__item-group"
  }, settings.map((setting, index) => setting && createElement(Dropdown, {
    key: index,
    position: dropdownPosition,
    className: "block-editor-panel-color-gradient-settings__dropdown",
    contentClassName: "block-editor-panel-color-gradient-settings__dropdown-content",
    renderToggle: _ref2 => {
      var _setting$gradientValu;

      let {
        isOpen,
        onToggle
      } = _ref2;
      return createElement(Item, {
        onClick: onToggle,
        className: classnames('block-editor-panel-color-gradient-settings__item', {
          'is-open': isOpen
        })
      }, createElement(HStack, {
        justify: "flex-start"
      }, createElement(ColorIndicator, {
        className: "block-editor-panel-color-gradient-settings__color-indicator",
        colorValue: (_setting$gradientValu = setting.gradientValue) !== null && _setting$gradientValu !== void 0 ? _setting$gradientValu : setting.colorValue
      }), createElement(FlexItem, null, setting.label)));
    },
    renderContent: () => createElement(ColorGradientControl, _extends({
      showTitle: false,
      colors,
      gradients,
      disableCustomColors,
      disableCustomGradients,
      __experimentalHasMultipleOrigins,
      __experimentalIsRenderedInSidebar,
      enableAlpha
    }, setting))
  })));
}
//# sourceMappingURL=dropdown.js.map