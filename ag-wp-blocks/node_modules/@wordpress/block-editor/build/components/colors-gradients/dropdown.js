"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ColorGradientSettingsDropdown;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classnames = _interopRequireDefault(require("classnames"));

var _components = require("@wordpress/components");

var _control = _interopRequireDefault(require("./control"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function ColorGradientSettingsDropdown(_ref) {
  let {
    colors,
    gradients,
    disableCustomColors,
    disableCustomGradients,
    __experimentalHasMultipleOrigins,
    __experimentalIsRenderedInSidebar,
    enableAlpha,
    settings
  } = _ref;
  let dropdownPosition;

  if (__experimentalIsRenderedInSidebar) {
    dropdownPosition = 'bottom left';
  }

  return (0, _element.createElement)(_components.__experimentalItemGroup, {
    isBordered: true,
    isSeparated: true,
    className: "block-editor-panel-color-gradient-settings__item-group"
  }, settings.map((setting, index) => setting && (0, _element.createElement)(_components.Dropdown, {
    key: index,
    position: dropdownPosition,
    className: "block-editor-panel-color-gradient-settings__dropdown",
    contentClassName: "block-editor-panel-color-gradient-settings__dropdown-content",
    renderToggle: _ref2 => {
      var _setting$gradientValu;

      let {
        isOpen,
        onToggle
      } = _ref2;
      return (0, _element.createElement)(_components.__experimentalItem, {
        onClick: onToggle,
        className: (0, _classnames.default)('block-editor-panel-color-gradient-settings__item', {
          'is-open': isOpen
        })
      }, (0, _element.createElement)(_components.__experimentalHStack, {
        justify: "flex-start"
      }, (0, _element.createElement)(_components.ColorIndicator, {
        className: "block-editor-panel-color-gradient-settings__color-indicator",
        colorValue: (_setting$gradientValu = setting.gradientValue) !== null && _setting$gradientValu !== void 0 ? _setting$gradientValu : setting.colorValue
      }), (0, _element.createElement)(_components.FlexItem, null, setting.label)));
    },
    renderContent: () => (0, _element.createElement)(_control.default, (0, _extends2.default)({
      showTitle: false,
      colors,
      gradients,
      disableCustomColors,
      disableCustomGradients,
      __experimentalHasMultipleOrigins,
      __experimentalIsRenderedInSidebar,
      enableAlpha
    }, setting))
  })));
}
//# sourceMappingURL=dropdown.js.map