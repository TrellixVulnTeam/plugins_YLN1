{"version":3,"sources":["@wordpress/block-editor/src/components/convert-to-group-buttons/toolbar.js"],"names":["layouts","group","undefined","row","type","flexWrap","stack","orientation","BlockGroupToolbar","blocksSelection","clientIds","groupingBlockName","isGroupable","replaceBlocks","blockEditorStore","canRemove","select","canRemoveBlocks","onConvertToGroup","layout","newBlocks","length","attributes","onConvertToRow","onConvertToStack"],"mappings":";;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AAbA;AACA;AACA;;AAOA;AACA;AACA;AAIA,MAAMA,OAAO,GAAG;AACfC,EAAAA,KAAK,EAAEC,SADQ;AAEfC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAFU;AAGfC,EAAAA,KAAK,EAAE;AAAEF,IAAAA,IAAI,EAAE,MAAR;AAAgBG,IAAAA,WAAW,EAAE;AAA7B;AAHQ,CAAhB;;AAMA,SAASC,iBAAT,GAA6B;AAC5B,QAAM;AACLC,IAAAA,eADK;AAELC,IAAAA,SAFK;AAGLC,IAAAA,iBAHK;AAILC,IAAAA;AAJK,MAKF,0DALJ;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAoB,uBAAaC,YAAb,CAA1B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAgB,qBACnBC,MAAF,IAAc;AACb,UAAM;AAAEC,MAAAA;AAAF,QAAsBD,MAAM,CAAEF,YAAF,CAAlC;AACA,WAAO;AACNC,MAAAA,SAAS,EAAEE,eAAe,CAAEP,SAAF;AADpB,KAAP;AAGA,GANoB,EAOrB,CAAEA,SAAF,CAPqB,CAAtB;;AAUA,QAAMQ,gBAAgB,GAAG,YAAwB;AAAA,QAAtBC,MAAsB,uEAAb,OAAa;AAChD,UAAMC,SAAS,GAAG,+BACjBX,eADiB,EAEjBE,iBAFiB,CAAlB;;AAKA,QAAKS,SAAS,IAAIA,SAAS,CAACC,MAAV,GAAmB,CAArC,EAAyC;AACxC;AACA;AACAD,MAAAA,SAAS,CAAE,CAAF,CAAT,CAAeE,UAAf,CAA0BH,MAA1B,GAAmCnB,OAAO,CAAEmB,MAAF,CAA1C;AACAN,MAAAA,aAAa,CAAEH,SAAF,EAAaU,SAAb,CAAb;AACA;AACD,GAZD;;AAcA,QAAMG,cAAc,GAAG,MAAML,gBAAgB,CAAE,KAAF,CAA7C;;AACA,QAAMM,gBAAgB,GAAG,MAAMN,gBAAgB,CAAE,OAAF,CAA/C,CAlC4B,CAoC5B;AACA;AACA;AACA;;;AACA,MAAK,CAAEN,WAAF,IAAiB,CAAEG,SAAxB,EAAoC;AACnC,WAAO,IAAP;AACA;;AAED,SACC,4BAAC,wBAAD,QACC,4BAAC,yBAAD;AACC,IAAA,IAAI,EAAGd,YADR;AAEC,IAAA,KAAK,EAAG,cAAI,OAAJ,EAAa,MAAb,CAFT;AAGC,IAAA,OAAO,EAAGiB;AAHX,IADD,EAMC,4BAAC,yBAAD;AACC,IAAA,IAAI,EAAGf,UADR;AAEC,IAAA,KAAK,EAAG,cAAI,KAAJ,EAAW,wBAAX,CAFT;AAGC,IAAA,OAAO,EAAGoB;AAHX,IAND,EAWC,4BAAC,yBAAD;AACC,IAAA,IAAI,EAAGjB,YADR;AAEC,IAAA,KAAK,EAAG,cAAI,OAAJ,EAAa,MAAb,CAFT;AAGC,IAAA,OAAO,EAAGkB;AAHX,IAXD,CADD;AAmBA;;eAEchB,iB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { switchToBlockType } from '@wordpress/blocks';\nimport { ToolbarButton, ToolbarGroup } from '@wordpress/components';\nimport { group, row, stack } from '@wordpress/icons';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { useConvertToGroupButtonProps } from '../convert-to-group-buttons';\nimport { store as blockEditorStore } from '../../store';\n\nconst layouts = {\n\tgroup: undefined,\n\trow: { type: 'flex', flexWrap: 'nowrap' },\n\tstack: { type: 'flex', orientation: 'vertical' },\n};\n\nfunction BlockGroupToolbar() {\n\tconst {\n\t\tblocksSelection,\n\t\tclientIds,\n\t\tgroupingBlockName,\n\t\tisGroupable,\n\t} = useConvertToGroupButtonProps();\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\n\tconst { canRemove } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canRemoveBlocks } = select( blockEditorStore );\n\t\t\treturn {\n\t\t\t\tcanRemove: canRemoveBlocks( clientIds ),\n\t\t\t};\n\t\t},\n\t\t[ clientIds ]\n\t);\n\n\tconst onConvertToGroup = ( layout = 'group' ) => {\n\t\tconst newBlocks = switchToBlockType(\n\t\t\tblocksSelection,\n\t\t\tgroupingBlockName\n\t\t);\n\n\t\tif ( newBlocks && newBlocks.length > 0 ) {\n\t\t\t// Because the block is not in the store yet we can't use\n\t\t\t// updateBlockAttributes so need to manually update attributes.\n\t\t\tnewBlocks[ 0 ].attributes.layout = layouts[ layout ];\n\t\t\treplaceBlocks( clientIds, newBlocks );\n\t\t}\n\t};\n\n\tconst onConvertToRow = () => onConvertToGroup( 'row' );\n\tconst onConvertToStack = () => onConvertToGroup( 'stack' );\n\n\t// Don't render the button if the current selection cannot be grouped.\n\t// A good example is selecting multiple button blocks within a Buttons block:\n\t// The group block is not a valid child of Buttons, so we should not show the button.\n\t// Any blocks that are locked against removal also cannot be grouped.\n\tif ( ! isGroupable || ! canRemove ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<ToolbarGroup>\n\t\t\t<ToolbarButton\n\t\t\t\ticon={ group }\n\t\t\t\tlabel={ _x( 'Group', 'verb' ) }\n\t\t\t\tonClick={ onConvertToGroup }\n\t\t\t/>\n\t\t\t<ToolbarButton\n\t\t\t\ticon={ row }\n\t\t\t\tlabel={ _x( 'Row', 'single horizontal line' ) }\n\t\t\t\tonClick={ onConvertToRow }\n\t\t\t/>\n\t\t\t<ToolbarButton\n\t\t\t\ticon={ stack }\n\t\t\t\tlabel={ _x( 'Stack', 'verb' ) }\n\t\t\t\tonClick={ onConvertToStack }\n\t\t\t/>\n\t\t</ToolbarGroup>\n\t);\n}\n\nexport default BlockGroupToolbar;\n"]}