/**
 * External dependencies
 */
import { get, upperFirst } from 'lodash';
/**
 * Internal dependencies
 */

export function generateBoxRules(style, options, path, ruleKey) {
  const boxStyle = get(style, path);

  if (!boxStyle) {
    return [];
  }

  const rules = [];

  if (typeof boxStyle === 'string') {
    rules.push({
      selector: options.selector,
      key: ruleKey,
      value: boxStyle
    });
  } else {
    const sideRules = ['top', 'right', 'bottom', 'left'].reduce((acc, side) => {
      const value = get(boxStyle, [side]);

      if (value) {
        acc.push({
          selector: options.selector,
          key: `${ruleKey}${upperFirst(side)}`,
          value
        });
      }

      return acc;
    }, []);
    rules.push(...sideRules);
  }

  return rules;
}
//# sourceMappingURL=utils.js.map